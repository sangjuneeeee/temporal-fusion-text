{"version":3,"file":"index.cjs.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Temporal-Fusion Text Display Library\n *\n * This library renders text that is only human-readable when frames\n * are temporally integrated, but indecipherable in any single frame or screenshot.\n *\n * MIT License © 2025 sangjuneeeee\n */\n\nexport interface FusionOptions {\n\t/** CSS font string, e.g. \"32px sans-serif\" */\n\tfont?: string;\n\t/** Fill style for glyphs, default \"#808080\" */\n\tcolor?: string;\n\t/** Opacity for glyphs (0.0–1.0), default 0.55 */\n\topacity?: number;\n\t/** Minimum (refreshRate * 2) to enable temporal fusion, default 120 */\n\tminSafeHz?: number;\n\t/** Horizontal margin in px, default 40 */\n\tmarginX?: number;\n\t/** Vertical margin in px, default 36 */\n\tmarginY?: number;\n\t/** Line height in px for auto-wrapping, default 48 */\n\tlineHeight?: number;\n}\n\n/**\n * Main class that handles temporal-fusion text rendering to a Canvas.\n */\nexport class TemporalFusionText {\n\tprivate canvas: HTMLCanvasElement;\n\tprivate ctx: CanvasRenderingContext2D;\n\tprivate text: string;\n\tprivate opts: Required<FusionOptions>;\n\n\tprivate offA: CanvasRenderingContext2D;\n\tprivate offB: CanvasRenderingContext2D;\n\tprivate charInfo: Array<{ ch: string; x: number; y: number }>;\n\n\tprivate parity: 0 | 1 = 0;\n\tprivate lastSwap = 0;\n\tprivate swapInterval = 0;\n\tprivate safeHz = 0;\n\n\t/**\n\t * @param canvas HTMLCanvasElement to render into\n\t * @param text Text content (supports \"\\n\" for newlines)\n\t * @param opts  Partial options to customize rendering\n\t */\n\tconstructor(canvas: HTMLCanvasElement, text: string, opts: FusionOptions = {}) {\n\t\tthis.canvas = canvas;\n\t\tconst ctx = canvas.getContext(\"2d\");\n\t\tif (!ctx) {\n\t\t\tthrow new Error(\"Unable to get 2D rendering context\");\n\t\t}\n\t\tthis.ctx = ctx;\n\t\tthis.text = text;\n\t\t// apply defaults\n\t\tthis.opts = {\n\t\t\tfont: '32px \"Segoe UI\", sans-serif',\n\t\t\tcolor: \"#808080\",\n\t\t\topacity: 0.55,\n\t\t\tminSafeHz: 120,\n\t\t\tmarginX: 40,\n\t\t\tmarginY: 36,\n\t\t\tlineHeight: 48,\n\t\t\t...opts,\n\t\t};\n\t\t// prepare off-screen buffers and layout\n\t\tthis.offA = this.createOffscreen();\n\t\tthis.offB = this.createOffscreen();\n\t\tthis.charInfo = this.computeLayout();\n\t\tthis.renderBuffers();\n\t}\n\n\t/** Estimate monitor refresh rate (samples two RAF frames). */\n\tprivate static async detectRefresh(): Promise<number> {\n\t\tconst t0 = performance.now();\n\t\tawait new Promise(requestAnimationFrame);\n\t\tconst t1 = performance.now();\n\t\tawait new Promise(requestAnimationFrame);\n\t\tconst t2 = performance.now();\n\t\t// average of two frame intervals\n\t\treturn Math.round(1000 / ((t2 - t0) / 2));\n\t}\n\n\t/** Create an offscreen canvas context matching the main canvas. */\n\tprivate createOffscreen(): CanvasRenderingContext2D {\n\t\tconst offscreen = document.createElement(\"canvas\");\n\t\toffscreen.width = this.canvas.width;\n\t\toffscreen.height = this.canvas.height;\n\t\tconst ctx = offscreen.getContext(\"2d\");\n\t\tif (!ctx) {\n\t\t\tthrow new Error(\"Unable to create offscreen 2D context\");\n\t\t}\n\t\treturn ctx;\n\t}\n\n\t/** Layout each character with auto-wrapping within margins. */\n\tprivate computeLayout() {\n\t\tconst info: Array<{ ch: string; x: number; y: number }> = [];\n\t\tconst { font, marginX, marginY, lineHeight } = this.opts;\n\t\tlet x = marginX;\n\t\tlet y = marginY;\n\t\tconst maxX = this.canvas.width - marginX;\n\t\tthis.ctx.font = font;\n\t\tthis.ctx.textBaseline = \"top\";\n\n\t\tfor (const ch of this.text) {\n\t\t\tif (ch === \"\\n\") {\n\t\t\t\tx = marginX;\n\t\t\t\ty += lineHeight;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst w = this.ctx.measureText(ch).width;\n\t\t\tif (x + w > maxX) {\n\t\t\t\tx = marginX;\n\t\t\t\ty += lineHeight;\n\t\t\t}\n\t\t\tinfo.push({ ch, x, y });\n\t\t\tx += w + 2;\n\t\t}\n\t\treturn info;\n\t}\n\n\t/** Render odd/even glyph sets into off-screen buffers once. */\n\tprivate renderBuffers() {\n\t\tconst { font, color, opacity } = this.opts;\n\t\t[this.offA, this.offB].forEach((offCtx) => {\n\t\t\toffCtx.clearRect(0, 0, offCtx.canvas.width, offCtx.canvas.height);\n\t\t\toffCtx.font = font;\n\t\t\toffCtx.textBaseline = \"top\";\n\t\t\toffCtx.fillStyle = color;\n\t\t\toffCtx.globalAlpha = opacity;\n\t\t});\n\n\t\tthis.charInfo.forEach(({ ch, x, y }, i) => {\n\t\t\tconst targetCtx = i % 2 === 0 ? this.offA : this.offB;\n\t\t\ttargetCtx.fillText(ch, x, y);\n\t\t});\n\t}\n\n\t/** Render static text (fallback when fusion disabled). */\n\tprivate renderStatic() {\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tthis.ctx.font = this.opts.font;\n\t\tthis.ctx.textBaseline = \"top\";\n\t\tthis.ctx.fillStyle = \"#ffffff\";\n\t\tfor (const { ch, x, y } of this.charInfo) {\n\t\t\tthis.ctx.fillText(ch, x, y);\n\t\t}\n\t}\n\n\t/** Main animation loop: toggles buffers at calculated interval. */\n\tprivate loop = (now: number) => {\n\t\tif (now - this.lastSwap >= this.swapInterval) {\n\t\t\tthis.parity ^= 1;\n\t\t\tthis.lastSwap = now;\n\t\t}\n\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t\tconst src = this.parity ? this.offB.canvas : this.offA.canvas;\n\t\tthis.ctx.drawImage(src, 0, 0);\n\t\trequestAnimationFrame(this.loop);\n\t};\n\n\t/**\n\t * Start rendering. Returns true if temporal-fusion mode is active,\n\t * false if fallback static mode is used.\n\t */\n\tasync run(): Promise<boolean> {\n\t\tconst refresh = await TemporalFusionText.detectRefresh();\n\t\tthis.safeHz = refresh * 2;\n\t\tif (\n\t\t\tthis.safeHz < this.opts.minSafeHz ||\n\t\t\twindow.matchMedia(\"(prefers-reduced-motion: reduce)\").matches\n\t\t) {\n\t\t\tthis.renderStatic();\n\t\t\treturn false;\n\t\t}\n\t\tthis.swapInterval = 1000 / this.safeHz;\n\t\trequestAnimationFrame(this.loop);\n\t\treturn true;\n\t}\n}\n\nexport default TemporalFusionText;\n"],"names":["TemporalFusionText","constructor","canvas","text","opts","this","parity","lastSwap","swapInterval","safeHz","loop","now","ctx","clearRect","width","height","src","offB","offA","drawImage","requestAnimationFrame","getContext","Error","font","color","opacity","minSafeHz","marginX","marginY","lineHeight","createOffscreen","charInfo","computeLayout","renderBuffers","detectRefresh","t0","performance","Promise","t2","Math","round","offscreen","document","createElement","info","x","y","maxX","textBaseline","ch","w","measureText","push","forEach","offCtx","fillStyle","globalAlpha","i","fillText","renderStatic","run","refresh","window","matchMedia","matches"],"mappings":"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"}